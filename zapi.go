// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package printers

import (
	"syscall"
	"unsafe"
)

var _ unsafe.Pointer

var (
	winspoolMod = syscall.NewLazyDLL("winspool.drv")

	procGetDefaultPrinterW  = winspoolMod.NewProc("GetDefaultPrinterW")
	procSetDefaultPrinterW  = winspoolMod.NewProc("SetDefaultPrinterW")
	procClosePrinter        = winspoolMod.NewProc("ClosePrinter")
	procOpenPrinterW        = winspoolMod.NewProc("OpenPrinterW")
	procStartDocPrinterW    = winspoolMod.NewProc("StartDocPrinterW")
	procEndDocPrinter       = winspoolMod.NewProc("EndDocPrinter")
	procWritePrinter        = winspoolMod.NewProc("WritePrinter")
	procStartPagePrinter    = winspoolMod.NewProc("StartPagePrinter")
	procEndPagePrinter      = winspoolMod.NewProc("EndPagePrinter")
	procEnumPrintersW       = winspoolMod.NewProc("EnumPrintersW")
	procGetPrinterDriverW   = winspoolMod.NewProc("GetPrinterDriverW")
	procEnumJobsW           = winspoolMod.NewProc("EnumJobsW")
	procDocumentPropertiesW = winspoolMod.NewProc("DocumentPropertiesW")
	procGetPrinterW         = winspoolMod.NewProc("GetPrinterW")
	procSetPrinterW         = winspoolMod.NewProc("SetPrinterW")
	procAddFormW            = winspoolMod.NewProc("AddFormW")
	procDeleteFormW         = winspoolMod.NewProc("DeleteFormW")
	procEnumFormsW          = winspoolMod.NewProc("EnumFormsW")
	procEnumPrinterDriversW = winspoolMod.NewProc("EnumPrinterDriversW")
)

func GetDefaultPrinter(buf *uint16, bufN *uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procGetDefaultPrinterW.Addr(), uintptr(unsafe.Pointer(buf)), uintptr(unsafe.Pointer(bufN)), 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func SetDefaultPrinter(name *uint16) (err error) {
	r1, _, e1 := syscall.SyscallN(procSetDefaultPrinterW.Addr(), uintptr(unsafe.Pointer(name)), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ClosePrinter(h syscall.Handle) (err error) {
	r1, _, e1 := syscall.SyscallN(procClosePrinter.Addr(), uintptr(h), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func OpenPrinter(name *uint16, h *syscall.Handle, defaults *PrinterDefaults) (err error) {
	r1, _, e1 := syscall.SyscallN(procOpenPrinterW.Addr(), uintptr(unsafe.Pointer(name)), uintptr(unsafe.Pointer(h)), uintptr(unsafe.Pointer(defaults)))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func StartDocPrinter(h syscall.Handle, level uint32, docInfo *DOC_INFO_1) (err error) {
	r1, _, e1 := syscall.SyscallN(procStartDocPrinterW.Addr(), uintptr(h), uintptr(level), uintptr(unsafe.Pointer(docInfo)))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func EndDocPrinter(h syscall.Handle) (err error) {
	r1, _, e1 := syscall.SyscallN(procEndDocPrinter.Addr(), uintptr(h), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func WritePrinter(h syscall.Handle, buf *byte, bufN uint32, written *uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procWritePrinter.Addr(), uintptr(h), uintptr(unsafe.Pointer(buf)), uintptr(bufN), uintptr(unsafe.Pointer(written)), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func StartPagePrinter(h syscall.Handle) (err error) {
	r1, _, e1 := syscall.SyscallN(procStartPagePrinter.Addr(), uintptr(h), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func EndPagePrinter(h syscall.Handle) (err error) {
	r1, _, e1 := syscall.SyscallN(procEndPagePrinter.Addr(), uintptr(h), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func EnumPrinters(flags uint32, name *uint16, level uint32, buf *byte, bufN uint32, needed *uint32, returned *uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procEnumPrintersW.Addr(), uintptr(flags), uintptr(unsafe.Pointer(name)), uintptr(level), uintptr(unsafe.Pointer(buf)), uintptr(bufN), uintptr(unsafe.Pointer(needed)), uintptr(unsafe.Pointer(returned)), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func GetPrinterDriver(h syscall.Handle, env *uint16, level uint32, di *byte, n uint32, needed *uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procGetPrinterDriverW.Addr(), uintptr(h), uintptr(unsafe.Pointer(env)), uintptr(level), uintptr(unsafe.Pointer(di)), uintptr(n), uintptr(unsafe.Pointer(needed)))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func EnumJobs(h syscall.Handle, firstJob uint32, noJobs uint32, level uint32, buf *byte, bufN uint32, bytesNeeded *uint32, jobsReturned *uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procEnumJobsW.Addr(), uintptr(h), uintptr(firstJob), uintptr(noJobs), uintptr(level), uintptr(unsafe.Pointer(buf)), uintptr(bufN), uintptr(unsafe.Pointer(bytesNeeded)), uintptr(unsafe.Pointer(jobsReturned)), 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func DocumentProperties(hWnd uint32, h syscall.Handle, pDeviceName *uint16, devModeOut *DevMode, devModeIn *DevMode, fMode uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procDocumentPropertiesW.Addr(), uintptr(hWnd), uintptr(h), uintptr(unsafe.Pointer(pDeviceName)), uintptr(unsafe.Pointer(devModeOut)), uintptr(unsafe.Pointer(devModeIn)), uintptr(fMode))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func GetPrinter(h syscall.Handle, level uint32, buf *byte, bufN uint32, needed *uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procGetPrinterW.Addr(), uintptr(h), uintptr(level), uintptr(unsafe.Pointer(buf)), uintptr(bufN), uintptr(unsafe.Pointer(needed)), 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func SetPrinter(h syscall.Handle, level uint32, buf *byte, command uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procSetPrinterW.Addr(), uintptr(h), uintptr(level), uintptr(unsafe.Pointer(buf)), uintptr(command), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func AddForm(h syscall.Handle, level uint32, form *FORM_INFO_1) (err error) {
	r1, _, e1 := syscall.SyscallN(procAddFormW.Addr(), uintptr(h), uintptr(level), uintptr(unsafe.Pointer(form)))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func DeleteForm(h syscall.Handle, pFormName *uint16) (err error) {
	r1, _, e1 := syscall.SyscallN(procDeleteFormW.Addr(), uintptr(h), uintptr(unsafe.Pointer(pFormName)), 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func EnumForms(h syscall.Handle, level uint32, pForm *byte, cbBuf uint32, pcbNeeded *uint32, pcReturned *uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procEnumFormsW.Addr(), uintptr(h), uintptr(level), uintptr(unsafe.Pointer(pForm)), uintptr(cbBuf), uintptr(unsafe.Pointer(pcbNeeded)), uintptr(unsafe.Pointer(pcReturned)))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func EnumPrinterDrivers(pName *uint16, env *uint16, level uint32, pDriverInfo *byte, cbBuf uint32, pcbNeeded *uint32, pcReturned *uint32) (err error) {
	r1, _, e1 := syscall.SyscallN(procEnumPrinterDriversW.Addr(), uintptr(unsafe.Pointer(pName)), uintptr(unsafe.Pointer(env)), uintptr(level), uintptr(unsafe.Pointer(pDriverInfo)), uintptr(cbBuf), uintptr(unsafe.Pointer(pcbNeeded)), uintptr(unsafe.Pointer(pcReturned)))
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}
